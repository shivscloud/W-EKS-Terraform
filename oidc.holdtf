data "aws_eks_cluster" "example" {
  name = "your-eks-cluster-name"
}

data "aws_iam_openid_connect_provider" "oidc" {
  url = data.aws_eks_cluster.example.identity[0].oidc[0].issuer
}

# provider "kubernetes" {
#   config_path = "~/.kube/config"
#   load_config_file = "true"
# }

resource "aws_iam_role" "irsa_role" {
  name = "your-irsa-role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = "sts:AssumeRoleWithWebIdentity",
        Effect = "Allow",
        Principal = {
          Federated = aws_iam_openid_connect_provider.oidc.arn
        }
        Condition = {
          StringEquals = {
            "${aws_iam_openid_connect_provider.oidc.url}:sub" = "system:serviceaccount:your-namespace:your-service-account"
          }
        }
      }
    ]
  })
}

resource "aws_iam_policy" "irsa_policy" {
  name        = "irsa-policy"
  description = "Your IRSA policy description"

  # Define your policy document here (e.g., s3:GetObject permission)
  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = ["s3:GetObject"],
        Effect = "Allow",
        Resource = ["arn:aws:s3:::your-bucket/*"]
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "irsa_policy_attachment" {
  policy_arn = aws_iam_policy.irsa_policy.arn
  role       = aws_iam_role.irsa_role.name
}


